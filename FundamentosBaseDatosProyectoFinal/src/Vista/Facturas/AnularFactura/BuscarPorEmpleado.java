/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vista.Facturas.AnularFactura;

import Controlador.ControladorCabeceraFactura;
import Controlador.ControladorEmpleado;
import Controlador.ControladorPersona;
import Modelo.Factura.CabeceraFactura;
import Modelo.Personas.Persona.Empleado;
import Modelo.Personas.Persona.Persona;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import Modelo.Personas.Persona.Empleado;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author venot
 */
public class BuscarPorEmpleado extends javax.swing.JInternalFrame {
    private ControladorEmpleado controladorEmpleado;
    private ControladorPersona controladorPersona;
    private ControladorCabeceraFactura controladorCabeceraFactura;
    private AnularFactura anularFactura;
    private javax.swing.JDesktopPane desktopPane;
    /**
     * Creates new form BuscarPorEmpleado
     */
    public BuscarPorEmpleado(javax.swing.JDesktopPane p) {
        initComponents();
        controladorEmpleado = new ControladorEmpleado();
        controladorPersona = new ControladorPersona();
        controladorCabeceraFactura = new ControladorCabeceraFactura();
        desktopPane = p;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jbntSeleccionar = new javax.swing.JButton();
        jbntSalir = new javax.swing.JButton();
        jtxtCedula = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jbntBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();

        jbntSeleccionar.setText("Seleccionar");
        jbntSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbntSeleccionarActionPerformed(evt);
            }
        });

        jbntSalir.setText("Salir");

        jLabel1.setText("Ingrese el numero de cedula del cliente :");

        jbntBuscar.setText("Buscar");
        jbntBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbntBuscarActionPerformed(evt);
            }
        });

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Fecha", "Subtotal", "Iva", "Total", "Estado", "Cliente", "Empleado"
            }
        ));
        jScrollPane1.setViewportView(jTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jtxtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jbntBuscar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 617, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbntSeleccionar, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                            .addComponent(jbntSalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtxtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbntBuscar))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(135, 135, 135)
                .addComponent(jbntSeleccionar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 218, Short.MAX_VALUE)
                .addComponent(jbntSalir)
                .addGap(44, 44, 44))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbntBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbntBuscarActionPerformed
        // TODO add your handling code here:
        if (jtxtCedula.getText().trim().isEmpty()){
            JOptionPane.showInternalMessageDialog(rootPane, "Llene el campo de cedula para empleado");
        }else{
            try {
                Persona per = controladorPersona.buscarPersonaEmpleado(jtxtCedula.getText().trim());
                if (per!=null) {
                    Empleado emp = controladorEmpleado.buscarEmpleado(per);
                    if (emp!= null ){
                        this.desplegarTabla(emp.getEmpleadoCodigo());
                    }else{
                        JOptionPane.showInternalMessageDialog(rootPane, "El empleado no existe en la base de datos");
                    }
                    
                }else{
                    JOptionPane.showInternalMessageDialog(rootPane, "La persona no existe en la base de datos");
                }
            } catch (SQLException ex) {
                Logger.getLogger(BuscarPorEmpleado.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jbntBuscarActionPerformed

    private void jbntSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbntSeleccionarActionPerformed
        // TODO add your handling code here:
        int num = obtenerCodigoProductoSeleccionado();
        desplegarVentana(num);
        this.setVisible(false);
    }//GEN-LAST:event_jbntSeleccionarActionPerformed
    
    
    private void desplegarTabla(int codigoEmpleado){
        DefaultTableModel modelo = (DefaultTableModel) this.jTable.getModel();
        modelo.setRowCount(0);
        List<CabeceraFactura> cabeceraFacturas = controladorCabeceraFactura.buscarPorEmpleado(codigoEmpleado);
        if (cabeceraFacturas != null && !cabeceraFacturas.isEmpty()) {
                for (CabeceraFactura cabecera : cabeceraFacturas) {
                    Object[] rowData = {
                        cabecera.getCodigo(),
                        cabecera.getFecha(),
                        cabecera.getSubTotal(),
                        cabecera.getTotalIVA(),
                        cabecera.getValorTotal(),
                        cabecera.getEstado(),
                        cabecera.getCodigoCliente(),
                        cabecera.getCodigoEmpleado()
                    };
                    modelo.addRow(rowData);
                }
            } else {
                JOptionPane.showMessageDialog(null, "No se encontraron facturas para el empleado con el nombre ingresado.");
            }
    }
    
    private int obtenerCodigoProductoSeleccionado() {
        int filaSeleccionada = jTable.getSelectedRow();

        if (filaSeleccionada != -1) { 
            Object valor = jTable.getValueAt(filaSeleccionada, 0);
            if (valor instanceof Number) {
                return ((Number) valor).intValue();
            } else {
                JOptionPane.showMessageDialog(this, "El código del producto no es válido.");
                return -1; 
            }
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione un producto de la tabla.");
            return -1; 
        }
    }
    
    private void desplegarVentana(int num){
        if(anularFactura == null){
            anularFactura = new AnularFactura();
            desktopPane.add(anularFactura);
        }
        
        anularFactura.setCabeceraFactura(controladorCabeceraFactura.buscarCabecera(num));
        anularFactura.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    private javax.swing.JButton jbntBuscar;
    private javax.swing.JButton jbntSalir;
    private javax.swing.JButton jbntSeleccionar;
    private javax.swing.JTextField jtxtCedula;
    // End of variables declaration//GEN-END:variables
}
